err.fct = "sse",
act.fct = "logistic",
threshold = 0.1,#阈值
linear.output = TRUE #输出神经元使用激活函数（线性）
)
plot(mod2)
mod2<-neuralnet(f,
data = data[train,],
hidden = c(10,12,20),
algorithm = "rprop+",
stepmax=1e10,
err.fct = "sse",
act.fct = "logistic",
threshold = 0.1,#阈值
linear.output = TRUE #输出神经元使用激活函数（线性）
)
mod2<-neuralnet(f,
data = data[train,],
hidden = c(10,12,20),
algorithm = "rprop+",
stepmax=1000000,
err.fct = "sse",
act.fct = "logistic",
threshold = 0.1,#阈值
linear.output = TRUE #输出神经元使用激活函数（线性）
)
plot(mod2)
mod2<-neuralnet(f,
data = data[train,],
hidden = c(10,12,20),
algorithm = "rprop+",
stepmax=1000000,
err.fct = "sse",
act.fct = "sigmoid",
threshold = 0.1,#阈值
linear.output = TRUE #输出神经元使用激活函数（线性）
)
mod2<-neuralnet(f,
data = data[train,],
hidden = c(10,12,20),
algorithm = "rprop+",
stepmax=1000000,
err.fct = "sse",
act.fct = "tanh",
threshold = 0.1,#阈值
linear.output = TRUE #输出神经元使用激活函数（线性）
)
plot(mod2)
mod2<-neuralnet(f,
data = data[train,],
hidden = c(10,12,20),
algorithm = "rprop+",
#stepmax=1000000,
err.fct = "sse",
act.fct = "tanh",
threshold = 0.1,#阈值
linear.output = TRUE #输出神经元使用激活函数（线性）
)
mod2<-neuralnet(f,
data = data[train,],
hidden = c(10,12,20),
algorithm = "rprop+",
stepmax=1000000,
err.fct = "sse",
act.fct = "tanh",
threshold = 0.1,#阈值
linear.output = TRUE #输出神经元使用激活函数（线性）
)
mod2<-neuralnet(f,
data = data[train,],
hidden = c(10,12,20),
algorithm = "rprop+",
stepmax=1000000,
err.fct = "sse",
act.fct = "tanh",
threshold = 0.1,#阈值
linear.output = TRUE #输出神经元使用激活函数（线性）
)
plot(mod2)
pred<-compute(mod2,data[-train,1:9])
mod2
pred<-compute(mod2,data[-train,1:9])
library(neuralnet)
require(Metrics)
data("bodyfat",pckage="TH.data")
data("bodyfat",package="TH.data")
library(TH.data)
install.packages("TH.data")
library(TH.data)
data(bodyfat)
bodyfat
library(RcppDL)
library(ltm)
data("Mobility")
data<-Mobility
set.seed(2395)
n<-nrow(data)
sample<-sample(1:n,1000,replace = F)
data<-as.matrix(Mobility[sample,])
n<-nrow(data)
train<-sample(1:n,800,FALSE)
x_train<-matrix(as.numeric(unlist(data[train,])),nrow = nrow(data[train,]))
x_test<-matrix(as.numeric(unlist(data[-train,])),nrow = nrow(data[-train,]))
x_train<-x_train[,-c(4,6)]
x_test<-x_test[,-c(4,6)]
head(x_train)
head(x_test)
fit<-Rrbm(x_train)
setHiddenRepresentation(fit,x=3)
setLearningRate(fit,x=0.01)
summary(fit)
train(fit)
reconProb<-reconstruct(fit,x_train)
head(reconProb,6)
recon<-ifelse(reconProb>=0.5,1,0)
head(recon)
table(recon,x_train,dnn = c("Predict","Observed"))
par(mfrow=c(1,2))
image(x_train,main="Train")
image(recon,main="Reconstruction")
library(deepnet)
fit2<-rbm.train(x_train,
hidden = 3,
numepochs = 3,
batchsize = 100,
learningrate = 0.8,
learningrate_scale = 1,
momentum = 0.5,
visible_type = "bin",
hidden_type = "bin",
cd=1)
reconProb2<-reconstruct(fit2,x_train)
sample(1：4, 4, replace = FALSE)
sample(1:4, 4, replace = FALSE)
getwd()
library(roxygen2)
roxygenize("npar")
roxygenize("C:/Users/ZYH/Documents/npar")
install.packages("rattle", dependencies = FALSE)
library(rattle)
install.packages("RGtk2", dependencies = FALSE)
library(rattle)
library(rattle)
rattle()
.libPaths()
help(stl)
help("decompose")
install.packages("RMySQL")
library(RMySQL)
conn <- dbConnect(MySQL(), dbname = "taidi", username="taidi", password="taidi2018",
host="10.1.56.14", port=3306)
dbReadTable(conn) #读表
dbReadTable(conn, "*") #读表
dbReadTable(conn, "Sheet1用户收视信息") #读表
dbReadTable(conn,"Sheet1用户回看信息") #读表
dbReadTable(conn,"附件3：用户基本信息") #读表
library(RODBC)
odbcDataSources()
mycon=odbcConnect("Contest",uid = "sa",pwd = "ncepumath123456")
user_view_info<-sqlQuery(mycon,"SELECT TOP 5 [id]
,[统计日期]
,[频道号]
,[频道名]
,[收看开始时间]
,[收看结束时间]
FROM [DataMining].[dbo].[user_view_info]")
user_view_info$start_time<-as.POSIXlt(user_view_info$收看开始时间)
user_view_info$end_time<-as.POSIXlt(user_view_info$收看结束时间)
user_view_info$time<-difftime(user_view_info$end_time,user_view_info$start_time)
user_view_info$time
View(user_view_info)
library(RODBC)
odbcDataSources()
mycon=odbcConnect("Contest",uid = "sa",pwd = "ncepumath123456")
user_view_info<-sqlQuery(mycon,"SELECT  [id]
,[频道名]
,[收看开始时间]
,[收看结束时间]
FROM [DataMining].[dbo].[user_view_info]")
user_view_info$start_time<-as.POSIXlt(user_view_info$收看开始时间)
user_view_info$end_time<-as.POSIXlt(user_view_info$收看结束时间)
user_view_info$time<-difftime(user_view_info$end_time,user_view_info$start_time)
user_view_info$time
user_view_info$time<-difftime(user_view_info$end_time,user_view_info$start_time,
units = "mins")
user_view_info$time
user_view_info$start_time
View(user_view_info)
as.POSIXlt(user_view_info$收看开始时间)
as.POSIXlt(user_view_info$收看开始时间[1:5])
as.POSIXlt(user_view_info$收看开始时间[1:10])
as.POSIXlt(user_view_info$收看开始时间[1:100])
as.POSIXlt(user_view_info$收看开始时间[1:1000])
as.POSIXlt(user_view_info$收看开始时间[1:10000])
View(user_view_info)
as.POSIXlt(user_view_info$收看开始时间[1:20000])
as.POSIXlt(user_view_info$收看开始时间[1:30000])
as.POSIXlt(user_view_info$收看开始时间[1:36000])
as.POSIXlt(user_view_info$收看开始时间[1:360000])
as.POSIXlt(user_view_info$收看开始时间[1:300000])
is.complex(user_view_info)
is.na(user_view_info)
n<-0
for(i in user_view_info$收看开始时间)
{
if(i==TRUE)
n<-n+1
}
n
View(user_view_info)
user_view_info$start_time
user_view_info$start_time<-as.POSIXct(user_view_info$收看开始时间)
user_view_info$start_time
help(strptime)
format(Sys.time(), "%a %b %d %X %Y %Z")
Sys.time()
format(Sys.time(), "%b %d %X %Y %Z")
format(Sys.time(), " %Z %b %d %X %Y")
format(Sys.time(), "  %Y %Z %b %d %X")
format(Sys.time(), "  %Y%b %d %X")
user_view_info$收看开始时间[1]
format(user_view_info$收看开始时间[1], "  %Y %b %d %X")
strptime((user_view_info$收看开始时间[1], "  %Y %b %d %X"))
strptime((user_view_info$收看开始时间[1], "  %Y/%b/%d %X"))
strptime(user_view_info$收看开始时间[1], "%m/%d/%y %H:%M")
user_view_info$收看开始时间[1]
View(user_view_info)
user_view_info$收看开始时间
user_view_info$收看开始时间[1:2]
class(user_view_info$收看开始时间)
strptime(user_view_info$收看开始时间, "%m/%d/%y %H:%M")
which(user_view_info$id=='10296' & user_view_info$收看开始时间=='20170819')
which(user_view_info$id=='10296' & user_view_info$收看开始时间=='2017/08/19')
which(user_view_info$id=='10296')
which(user_view_info$id=='10296' & user_view_info$收看开始时间=='2017/08/19')
which(user_view_info$id=='10296' & user_view_info$频道名=='中央纪录-高清')
which(user_view_info$id=='10296' & user_view_info$频道名=='中央纪录-高清' &
user_view_info$收看结束时间=="2017/8/19 0:06"  )
user_view_info[145767]
user_view_info[145767,]
library(RODBC)
odbcDataSources()
mycon=odbcConnect("Contest",uid = "sa",pwd = "ncepumath123456")
user_view_info<-sqlQuery(mycon,"SELECT  [id]
,[频道名]
,[收看开始时间]
,[收看结束时间]
FROM [DataMining].[dbo].[user_view_info_C]")
user_view_info$start_time<-as.POSIXlt(user_view_info$收看开始时间)
user_view_info$start_time
user_view_info$end_time<-as.POSIXlt(user_view_info$收看结束时间)
user_view_info$time<-difftime(user_view_info$end_time,user_view_info$start_time,
units = "mins")
user_view_info$time
View(user_view_info)
start_id<-which.min(user_view_info$id)
end_id<-which.max(user_view_info$id)
start_id
View(user_view_info)
end_id
View(user_view_info)
user_view_info$id
which.min(user_view_info$id)
orderwhich.min(user_view_info$id)
order(user_view_info$id)
which(user_view_info$id==6200)
user_view_info$id
id<-order(user_view_info$id)
id<-data.frame(order(user_view_info$id))
View(id)
library(RODBC)
odbcDataSources()
mycon=odbcConnect("Contest",uid = "sa",pwd = "ncepumath123456")
user_view_info<-sqlQuery(mycon,"SELECT  [id]
,[频道名]
,[收看开始时间]
,[收看结束时间]
FROM [DataMining].[dbo].[user_view_info_C]")
user_view_info$start_time<-as.POSIXlt(user_view_info$收看开始时间)
library(RODBC)
odbcDataSources()
mycon=odbcConnect("Contest",uid = "sa",pwd = "ncepumath123456")
user_view_info<-sqlQuery(mycon,"SELECT  [设备名]
,[频道名]
,[收看开始时间]
,[收看结束时间]
FROM [DataMining].[dbo].[user_view_info_C]")
user_view_info$start_time<-as.POSIXlt(user_view_info$收看开始时间)
user_view_info<-sqlQuery(mycon,"SELECT  [设备名]
,[频道名]
,[收看开始时间]
,[收看结束时间]
FROM [DataMining].[dbo].[user_view_info_C]")
user_view_info<-sqlQuery(mycon,"SELECT T [设备号]
,[统计日期]
,[频道号]
,[频道名]
,[收看开始时间]
,[收看结束时间]
FROM [DataMining].[dbo].[user_view_info_C]")
library(RODBC)
odbcDataSources()
mycon=odbcConnect("Contest",uid = "sa",pwd = "ncepumath123456")
user_view_info<-sqlQuery(mycon,"SELECT T [设备号]
,[统计日期]
,[频道号]
,[频道名]
,[收看开始时间]
,[收看结束时间]
FROM [DataMining].[dbo].[user_view_info_C]")
user_view_info
user_view_info<-sqlQuery(mycon,"SELECT [设备号]
,[统计日期]
,[频道号]
,[频道名]
,[收看开始时间]
,[收看结束时间]
FROM [DataMining].[dbo].[user_view_info_C]")
user_view_info
View(user_view_info)
library(RODBC)
mycon=odbcConnect("Contest",uid = "sa",pwd = "ncepumath123456")
user_view_info<-sqlQuery(mycon,"SELECT [设备号]
,[统计日期]
,[频道号]
,[频道名]
,[收看开始时间]
,[收看结束时间]
FROM [DataMining].[dbo].[user_view_info_C]")
user_view_info$start_time<-as.POSIXlt(user_view_info$收看开始时间)
user_view_info$start_time
user_view_info$end_time<-as.POSIXlt(user_view_info$收看结束时间)
user_view_info$time<-difftime(user_view_info$end_time,user_view_info$start_time,
units = "mins")
View(user_view_info)
start_id<-which.min(user_view_info$设备号)
user_view_info$设备号
start_id<-which.min(user_view_info$设备号)
summary(user_view_info$设备号)
SUM<-summary(user_view_info$设备号)
SUM
SUM[1]
SUM[[1]]
start_id<-SUM[[1]]
end_id<-SUM[[6]]
user_view_info[设备名==10001，]
user_view_info["设备名"==10001，]
user_view_info[user_view_info$设备号==10001，]
user_view_info[user_view_info$设备号==10001,]
Sys.setlocale(category = "LC_ALL", locale = "us")
Habit_info<-data.frame()
Habit_info[1,]<-c(1,2,3)
Habit_info
Habit_info[1,]<-c(1,2,3)
?merge()
Sys.setlocale(category = "LC_ALL", locale = "us")
lamada<-1/2.266
lamada<-round(1/2.266,4)
product_life<-rexp(n=50,rate=lamada)
quantile(product_life,c(0.005,0.995))
product_life
? sample
product_mean<-c()
for(i in 100)
{
product_mean<-cbind(product_mean,mean(sample(product_life,50,replace = T)))
}
View(product_mean)
product_mean<-c()
for(i in 100)
{
product_mean<-c(product_mean,mean(sample(product_life,50,replace = T)))
}
product_mean<-c()
for(i in 1:100)
{
product_mean<-c(product_mean,mean(sample(product_life,50,replace = T)))
}
quantile(product_mean,c(0.025,0.975))
interval_95<-quantile(product_mean,c(0.025,0.975))
print(interval_95)
getwd()
dt <- data.frame(A = 2001:2005,C = ('a','b','c','d','e'))
dt <- data.frame(A = 2001:2005,C = c('a','b','c','d','e'))
View(dt)
s <- 3
par(mar=c(4, 2, 4, 6)+0.1)
plot(c(0,1),c(0,1),type = "n",xlab = xla,ylab = "",yaxt = "n",
xaxs = 'i',yaxs = 'i')
plot(c(0,1),c(0,1),type = "n",xlab = "人口百分比",ylab = "",yaxt = "n",
xaxs = 'i',yaxs = 'i')
axis(side=4, col.axis="black")
par(mar=c(4, 2, 4, 6)+0.1)
plot(c(0,1),c(0,1),type = "n",xlab = "人口百分比累积",ylab = "",yaxt = "n",
xaxs = 'i',yaxs = 'i')
axis(side=4, col.axis="black")
mtext(4,text="收入百分比累积",line=3)
x <- seq(0,1,500)
?seq
x <- seq(0,1,by = 500)
x <- seq(0,1,by = 0.005)
x <- seq(0,1,by = 0.005)
y <- cos(x)
lines(x,y,type = "h")
x <- seq(0,1,by = 0.005)
y <- power(x,3)
y <- power(x)
x <- seq(0,1,by = 0.005)
y <- x * x
lines(x,y,type = "h")
par(mar=c(4, 2, 4, 6)+0.1)
plot(c(0,1),c(0,1),type = "n",xlab = "人口百分比累积",ylab = "",yaxt = "n",
xaxs = 'i',yaxs = 'i')
axis(side=4, col.axis="black")
mtext(4,text="收入百分比累积",line=3)
x <- seq(0,1,by = 0.005)
y <- x * x
lines(x,y,type = "h")
par(mar=c(4, 2, 4, 6)+0.1)
plot(c(0,1),c(0,1),type = "n",xlab = "人口百分比累积",ylab = "",yaxt = "n",
xaxs = 'i',yaxs = 'i')
axis(side=4, col.axis="black")
mtext(4,text="收入百分比累积",line=3)
x <- seq(0,1,by = 0.005)
y <- x * x
lines(x,y)
polygon(c(x,1),c(y,0),col = "lightgreen",border = 'NA')
polygon(x,y,col = "gray",border = 'NA')
abline(0,1)
par(mar=c(4, 2, 4, 6)+0.1)
plot(c(0,1),c(0,1),type = "n",xlab = "指标百分比累积",ylab = "",yaxt = "n",
xaxs = 'i',yaxs = 'i')
axis(side=4, col.axis="black")
mtext(4,text="工资百分比累积",line=3)
x <- seq(0,1,by = 0.005)
y <- x * x
lines(x,y)
polygon(c(x,1),c(y,0),col = "lightgreen",border = 'NA')
polygon(x,y,col = "gray",border = 'NA')
abline(0,1)
getwd()
data(boston)
data(boston,package = 'spdep')
data(boston,package = 'spdep.pdf')
install.packages("spdep")
library(spdep)
install.packages("sf")
library(spdep)
install.packages("units")
library(spdep)
data(boston,package = 'spdep')
data(boston.c,package = 'spdep')
data(boston)
View(boston.c)
#install.packages("units")
library(spdep)
data(boston)
BostonData <- boston.c
View(BostonData)
colnames(BostonData)
lm(MEDV~.-TOWN-TOWNNO-TRACT-LON,data = BostonData)
lm_model = lm(MEDV~.-TOWN-TOWNNO-TRACT-LON,data = BostonData)
summary(lm_model)
lm_model = lm(MEDV~.-TOWN-TOWNNO-TRACT-LON-CMEDV,data = BostonData)
summary(lm_model)
setwd("D:A_TechnologyScience/R/lm/code")
library(spdep)
data(boston)
BostonData <- boston.c
colnames(BostonData)
View(BostonData)
lm_model = lm(MEDV~.-TOWN-TOWNNO-TRACT-LON-CMEDV,data = BostonData)
summary(lm_model)
step_lm_model <- step(lm_model)
?step
step_lm_model <- step(lm_model,trace = 0)
summary(step_lm_model)
plot.default(step_lm_model)
plot(step_lm_model)
par(mfrow=c(2,2))
plot(step_lm_model)
re<-rstudent(step_lm_model)
shapiro.test(re)
library(ISLR)
fix(Auto)    #mpg油耗量，horsepower马力...
names(Auto)  #
#多元回归
lm.fit0<-lm(mpg~.-name-year,data = Auto)
summary(lm.fit0)
#存在不显著的项，进行逐步回归
lm.fit0_step<-step(lm.fit0)
summary(lm.fit0_step)
#残差分析图
par(mfrow=c(2,2))
plot(lm.fit0_step)
#残差图中存在明显的几个点是与众不同的，在一元线性回归中我们把它们
#当成离群点，进行剔除，但是多元回归中，我们应该考虑是否存在交互作用，导致了
#这些点的与众不同，而且残差图显示线性拟合效果一般，所以我们
#尝试建立含有交互项的多元回归
lm.fit<-lm(mpg~origin*horsepower+origin*weight,data = Auto)
summary(lm.fit)
#残差分析
par(mfrow=c(2,2))
plot(lm.fit)
#对两模型进行比较
anova(lm.fit0_step,lm.fit)
#正态性检验
re<-rstudent(lm.fit)
shapiro.test(re)
shapiro.test(re)
re<-rstudent(step_lm_model)
shapiro.test(re)
